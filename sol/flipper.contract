{
  "contract": {
    "authors": [
      "unknown"
    ],
    "name": "flipper",
    "version": "0.0.1"
  },
  "metadataVersion": "0.1.0",
  "source": {
    "compiler": "solang 0.1.6",
    "hash": "0x1ddcd2485c7d17a3941f28641d65d5a5fffa2f7f1305d490caa8a06d626db490",
    "language": "Solidity 0.1.6",
    "wasm": "0x0061736d01000000011f0660037f7f7f017f60037f7f7f0060027f7f0060017f017f6000006000017f0288010603656e76066d656d6f727902011010057365616c30107365616c5f6765745f73746f726167650000057365616c30107365616c5f7365745f73746f726167650001057365616c300a7365616c5f696e7075740002057365616c300b7365616c5f72657475726e0001057365616c30167365616c5f76616c75655f7472616e7366657272656400020306050304050404040501700101010608017f01418080040b071102066465706c6f7900080463616c6c00090a970705a60101047f418080042101024003400240200128020c0d002001280208220220004f0d020b200128020022010d000b41002101410028020821020b02402002200041076a41787122036b22024118490d00200120036a41106a22002001280200220436020002402004450d00200420003602040b2000200241706a3602082000410036020c2000200136020420012000360200200120033602080b2001410136020c200141106a0b2e004100410036028080044100410036028480044100410036028c800441003f0041107441f0ff7b6a36028880040b9e0101047f230041206b22002400410041013602082000220141186a420037030020014200370310200142003703082001420037030041002102024020014110410810000d0041002d001021020b200041606a220022032400200041186a4200370300200042003703102000420037030820004200370300200341706a2203240020032002417f734101713a00002000200341011001200141206a240041000bdd0101037f230041306b2200240010064100418080023602084110410810024100410028020822013602040240024002400240200141034d0d00410041002802102202360200200241f8bdf8d301470d0041152001417c6a41146a22014b0d0141152001470d0241002d00142101200041286a42003703002000420037032020004200370318200042003703102000200141ff01714101463a000f200041106a2000410f6a4101100141010d034101410041001003000b4101410041001003000b4101410041001003000b4101410041001003000b4100410041001003000bbe0201037f230041306b220024004100411036020841104108100402400240024002400240024041002903104100290318844200520d001006410041808002360208411041081002410041002802082201360204200141034d0d014100410028021022023602002001417c6a21010240200241ed9899e703460d00200241cdc9bfcf7a470d0220010d031007450d044101410041001003000b20010d044100210141004101360208200041286a42003703002000420037032020004200370318200042003703100240200041106a4110410810000d0041002d001021010b200020014101713a000f41010d054101410041001003000b4101410041001003000b4101410041001003000b4101410041001003000b4100410041001003000b4101410041001003000b41011005220120002d000f3a00004100200141011003000b"
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "name": "initvalue",
            "type": {
              "display_name": [
                "bool"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          "Constructor that initializes the `bool` value to the given `init_value`.\n\n"
        ],
        "name": "new",
        "selector": "0xf81e7e1a"
      }
    ],
    "events": [],
    "messages": [
      {
        "args": [],
        "docs": [
          "A message that can be called on instantiated contracts. This one flips the value of the stored `bool` from `true` to `false` and vice versa.\n\n"
        ],
        "mutates": true,
        "name": "flip",
        "payable": false,
        "return_type": null,
        "selector": "0xcde4efa9"
      },
      {
        "args": [],
        "docs": [
          "Simply returns the current value of our `bool`.\n\n"
        ],
        "mutates": false,
        "name": "get",
        "payable": false,
        "return_type": {
          "display_name": [
            "bool"
          ],
          "type": 1
        },
        "selector": "0x6d4ce63c"
      }
    ]
  },
  "storage": {
    "struct": {
      "fields": [
        {
          "layout": {
            "cell": {
              "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "ty": 1
            }
          },
          "name": "value"
        }
      ]
    }
  },
  "types": [
    {
      "def": {
        "primitive": "bool"
      }
    }
  ]
}